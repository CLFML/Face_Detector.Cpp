Make sure you have installed and configured ROS2 jazzy
https://docs.ros.org/en/jazzy/Tutorials/Beginner-CLI-Tools/Configuring-ROS2-Environment.html


Make sure ros cv bridge is installed

sudo apt install ros-jazzy-cv-bridge

When using VScode, we need to start ros, before vscode,
so move to the project folder, then
source /opt/ros/jazzy/setup.bash
and then 
code .


build the package (see https://docs.ros.org/en/jazzy/Tutorials/Beginner-Client-Libraries/Colcon-Tutorial.html):
with more verbose output
colcon build --symlink-install --event-handlers console_direct+ --packages-select face_detector

rm -rf build install log
-rf ~/.ros

no symlinks?
colcon build --event-handlers console_direct+ --packages-select face_detector


Run the demo

Before you can use any of the installed executables or libraries, you will need to add them to your path and library paths. 
colcon will have generated bash/bat files in the install directory to help set up the environment. 
These files will add all of the required elements to your path and library paths as well as provide any bash or shell commands exported by packages.

source install/setup.bash

With the environment sourced, we can run executables built by colcon. Let’s run the camera node from the examples:

ros2 run face_detector camera_node

In another terminal, let’s run the face detector node (don’t forget to source the setup script):

ros2 run face_detector face_detector_node

In yet another terminal, let’s run the viewer node:

ros2 run face_detector viewer

You should see messages from the publisher and subscriber with numbers incrementing.

